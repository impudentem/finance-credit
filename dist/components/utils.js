// Generated by CoffeeScript 1.12.5
var CustomEvent, ce, e;

Date.prototype.getDateAdd = function(date, interval, units) {
  var checkRollover, ret;
  ret = new Date(date);
  checkRollover = function() {
    if (ret.getDate() !== date.getDate()) {
      return ret.setDate(0);
    }
  };
  switch (interval.toLowerCase()) {
    case "year":
      ret.setFullYear(ret.getFullYear() + units);
      checkRollover();
      break;
    case "quarter":
      ret.setMonth(ret.getMonth() + 3 * units);
      checkRollover();
      break;
    case "month":
      ret.setMonth(ret.getMonth() + units);
      checkRollover();
      break;
    case "week":
      ret.setDate(ret.getDate() + 7 * units);
      break;
    case "day":
      ret.setDate(ret.getDate() + units);
      break;
    case "hour":
      ret.setTime(ret.getTime() + units * 3600000);
      break;
    case "minute":
      ret.setTime(ret.getTime() + units * 60000);
      break;
    case "second":
      ret.setTime(ret.getTime() + units * 1000);
      break;
    default:
      ret = void 0;
  }
  return ret;
};

Object.size = function(obj) {
  return Object.keys(obj).length;
};

Object.get = function(obj, path, curr) {
  var i, key, len, paths;
  if (curr == null) {
    curr = obj;
  }
  paths = path.split(".");
  for (i = 0, len = paths.length; i < len; i++) {
    key = paths[i];
    curr = curr[key] !== void 0 ? curr[key] : void 0;
  }
  return curr;
};

try {
  ce = new window.CustomEvent('test');
  ce.preventDefault();
  if (ce.defaultPrevented !== true) {
    throw new Error('Could not prevent default');
  }
} catch (error) {
  e = error;
  CustomEvent = function(event, params) {
    var evt, origPrevent;
    params = params || {
      bubbles: false,
      cancelable: false,
      detail: void 0
    };
    evt = document.createEvent("CustomEvent");
    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
    origPrevent = evt.preventDefault;
    evt.preventDefault = function() {
      origPrevent.call(this);
      try {
        return Object.defineProperty(this, 'defaultPrevented', {
          get: function() {
            return true;
          }
        });
      } catch (error) {
        e = error;
        return this.defaultPrevented = true;
      }
    };
    return evt;
  };
  CustomEvent.prototype = window.Event.prototype;
  window.CustomEvent = CustomEvent;
}
