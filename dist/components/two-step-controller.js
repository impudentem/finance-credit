// Generated by CoffeeScript 1.12.5
var twoStepController;

twoStepController = (function() {
  function twoStepController($http, $scope, $rootScope, $sce, $window, $element, $sceDelegate, $filter, $timeout) {
    this.$http = $http;
    this.$scope = $scope;
    this.$rootScope = $rootScope;
    this.$sce = $sce;
    this.$window = $window;
    this.$element = $element;
    this.$sceDelegate = $sceDelegate;
    this.$filter = $filter;
    this.$timeout = $timeout;
    this.form_data = {};
    this.$scope.$watch((function(_this) {
      return function(newValue, oldValue, scope) {
        return _this.$scope.main.currentStep;
      };
    })(this), (function(_this) {
      return function(newValue, oldValue, scope) {
        if (newValue === 2) {
          _this.init();
        }
        return false;
      };
    })(this));
  }

  twoStepController.prototype.card_hover = function($event, card) {
    return this.$scope.cards_two.card_hover = $event.type === "mouseover" ? card : "";
  };

  twoStepController.prototype.init = function() {
    var maxDate, minDate;
    minDate = new Date();
    maxDate = new Date();
    maxDate.setFullYear(maxDate.getFullYear() - 18);
    minDate.setFullYear(minDate.getFullYear() - 90);
    this.initCal = (function(_this) {
      return function() {
        var _cal;
        _cal = $(".ui.calendar");
        if (_cal.length) {
          _cal.calendar({
            type: "date",
            firstDayOfWeek: 1,
            ampm: false,
            minDate: minDate,
            maxDate: maxDate,
            disableMinute: true,
            className: {
              prevIcon: "open icon left",
              nextIcon: "open icon right"
            },
            text: {
              days: ['В', 'П', 'В', 'С', 'Ч', 'П', 'С'],
              months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
              monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
              today: 'Сегодня',
              now: 'Сейчас',
              am: 'AM',
              pm: 'PM'
            },
            onChange: function(date, text, mode) {
              _this.$scope.form_two.form_data.bday = text;
              if (!_this.$scope.$$phase) {
                return _this.$scope.$apply();
              }
            },
            formatter: {
              date: function(date, settings) {
                if (!date) {
                  return "";
                }
                return date.toLocaleString().split(',')[0];
              }
            }
          });
          _this.$scope.form_two.form_data.calObj = _cal;
          window.__calend = _cal;
          _this.$scope.main.loading = false;
          return _this.initMask();
        } else {
          return _this.$timeout(function() {
            return _this.initCal();
          }, 1000);
        }
      };
    })(this);
    return this.$timeout((function(_this) {
      return function() {
        return _this.initCal();
      };
    })(this));
  };

  twoStepController.prototype.initMask = function() {
    this.$window.dispatchEvent(this.$rootScope.settings.events.eventWidgetStep2);
    return $(this.$element).find("form").form({
      inline: true,
      on: "blur",
      fields: {
        fullname: {
          identifier: "fullname",
          rules: [
            {
              type: "regExp[/^[а-яёієыї\\-\\']*\\s[а-яёієыї\\-\\']*\\s[а-яёієыї\\-\\']*$/i]",
              prompt: "Введены недопустимые символы"
            }
          ]
        },
        fullname: {
          identifier: "fullname",
          rules: [
            {
              type: "regExp[/^[а-яёієыї\\-\\']*\\s[а-яёієыї\\-\\']*\\s[а-яёієыї\\-\\']*$/i]",
              prompt: "Введены недопустимые символы"
            }
          ]
        },
        phone: {
          identifier: "phone",
          rules: [
            {
              type: "empty",
              prompt: "Неправильный номер телефона"
            }
          ]
        },
        aggree: {
          identifier: "aggree",
          rules: [
            {
              type: "checked",
              prompt: "Так мы не сможем обработать Ваш запрос"
            }
          ]
        }
      },
      onSuccess: (function(_this) {
        return function(e, f) {
          _this.$scope.main.loading = true;
          _this.$scope.main.currentStep = 3;
          console.log(e, f);
          return false;
        };
      })(this)
    });
  };

  return twoStepController;

})();
